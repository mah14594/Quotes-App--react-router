{"version":3,"sources":["components/UI/Card.js","components/UI/Card.module.css","components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","Pages/AllQuotes.js"],"names":["Card","props","className","classes","card","children","module","exports","QuoteItem","item","text","author","to","id","toString","QuoteList","history","useHistory","location","useLocation","isAscending","URLSearchParams","search","get","console","log","quotes","ascending","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","NoQuotesFound","noquotes","AllQuotes","useHttp","getAllQuotes","sendRequest","status","data","error","useEffect","LoadingSpinner","length"],"mappings":"mIAAA,4BAMeA,IAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,a,mBCF9CC,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,mBCA3DD,EAAOC,QAAU,CAAC,SAAW,kC,wICiBdC,EAhBG,SAACP,GACjB,OACE,qBAAIC,UAAWC,IAAQM,KAAvB,UACE,mCACE,qCACE,4BAAIR,EAAMS,SAEZ,qCAAaT,EAAMU,YAErB,cAAC,IAAD,CAAMT,UAAU,MAAMU,GAAE,iBAAYX,EAAMY,GAAGC,YAA7C,iC,iBCkCSC,EAhCG,SAACd,GACjB,IAAMe,EAAUC,cACVC,EAAWC,cAGXC,EAAuB,QAFT,IAAIC,gBAAgBH,EAASI,QACxBC,IAAI,QAE7BC,QAAQC,IAAIP,GACZ,IAhBkBQ,EAAQC,EAmBpBC,GAnBYF,EAmBczB,EAAMyB,OAnBZC,EAmBoBP,EAlBvCM,EAAOG,MAAK,SAACC,EAAQC,GAC1B,OAAIJ,EACKG,EAAOjB,GAAKkB,EAAOlB,GAAK,GAAK,EAE7BiB,EAAOjB,GAAKkB,EAAOlB,GAAK,GAAK,MAexC,OACE,eAACb,EAAA,EAAD,WACE,qBAAKE,UAAWC,IAAQ6B,QAAxB,SACE,yBAAQC,QAPM,WAClBjB,EAAQkB,KAAR,UAAgBhB,EAASiB,SAAzB,iBAA0Cf,EAAc,OAAS,SAM7D,kBACQA,EAAc,aAAe,iBAGvC,oBAAIlB,UAAWC,IAAQiC,KAAvB,SACGR,EAAaS,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAEEzB,GAAIyB,EAAMzB,GACVF,OAAQ2B,EAAM3B,OACdD,KAAM4B,EAAM5B,MAHP4B,EAAMzB,a,yCCrBR0B,EAXO,WACpB,OACE,sBAAKrC,UAAWC,IAAQqC,SAAxB,UACE,iDACA,cAAC,IAAD,CAAMtC,UAAU,MAAMU,GAAG,aAAzB,6BCAS,SAAS6B,IACtB,MAKIC,YAAQC,KAAc,GAJxBC,EADF,EACEA,YACAC,EAFF,EAEEA,OACMJ,EAHR,EAGEK,KACAC,EAJF,EAIEA,MAOF,OAJAC,qBAAU,WACRJ,MACC,CAACA,IAEW,YAAXC,EAEA,qBAAK3C,UAAU,WAAf,SACE,cAAC+C,EAAA,EAAD,MAIFF,EACK,qBAAK7C,UAAU,mBAAf,SAAmC6C,IAE7B,cAAXF,GAA4BJ,GAAkC,IAArBA,EAAUS,OAIrD,8BACE,cAAC,EAAD,CAAWxB,OAAQe,MAJd,cAAC,EAAD","file":"static/js/5.0dd04894.chunk.js","sourcesContent":["import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3Ubc4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2h6dZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__1I5bv\",\"sorting\":\"QuoteList_sorting__3MPFH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__zxPVM\"};","import classes from \"./QuoteItem.module.css\";\nimport { Link } from \"react-router-dom\";\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className=\"btn\" to={`Quotes/${props.id.toString()}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import Card from \"../UI/Card\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const queryparams = new URLSearchParams(location.search);\n  const Sort = queryparams.get(\"sort\");\n  const isAscending = Sort === \"asc\";\n  console.log(location);\n  const sorthandler = () => {\n    history.push(`${location.pathname}?sort=${isAscending ? \"desc\" : \"asc\"}`);\n  };\n  const sortedQuotes = sortQuotes(props.quotes, isAscending);\n  return (\n    <Card>\n      <div className={classes.sorting}>\n        <button onClick={sorthandler}>\n          sort {isAscending ? \"descinding\" : \"ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Card>\n  );\n};\n\nexport default QuoteList;\n","import classes from \"./NoQuotesFound.module.css\";\nimport { Link } from \"react-router-dom\";\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className=\"btn\" to=\"/New-Quote\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import React, { useEffect } from \"react\";\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\nexport default function AllQuotes() {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: AllQuotes,\r\n    error,\r\n  } = useHttp(getAllQuotes, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner></LoadingSpinner>\r\n      </div>\r\n    );\r\n  }\r\n  if (error) {\r\n    return <div className=\"centered focused\">{error}</div>;\r\n  }\r\n  if (status === \"completed\" && (!AllQuotes || AllQuotes.length === 0)) {\r\n    return <NoQuotesFound></NoQuotesFound>;\r\n  }\r\n  return (\r\n    <div>\r\n      <QuoteList quotes={AllQuotes} />\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}